---
- name: Deploy OpenIDL application on {{ node_type }} node
  hosts: ec2-18-119-105-48.us-east-2.compute.amazonaws.com
  gather_facts: no
  no_log: "{{ no_ansible_log | default(false) }}"
  tasks:
  - name: Install package dependencies
    package:
      name: "{{ item }}"
      state: present
    with_items:
      - curl
      - awscli

  - name: Configure awscli credentials for IAM user
    shell: aws configure set {{ item.key }} {{ item.value }} --profile cicd-user
    no_log: True
    with_dict:
      aws_access_key_id: "{{ aws_access_key }}"
      aws_secret_access_key: "{{ aws_secret_key }}"
      region: "{{ aws_region }}"
      format: "table"
      external_id: "{{ aws_external_id }}"
    changed_when: false

  - name: Configure awscli credentials for IAM role
    shell: aws configure set {{ item.key }} {{ item.value }} --profile cicd-role
    no_log: True
    with_dict:
      external_id: "{{ aws_external_id }}"
      source_profile: "cicd-user"
      role_arn: "{{ aws_iam_role }}"
      region: "{{ aws_region }}"
    changed_when: false

  - name: Test AWS CLI is functioning
    shell: export AWS_PROFILE=cicd-role; aws sts get-caller-identity
    register: aws_caller_identity

  - name: Checking kubectl exists
    stat:
      path: /usr/local/bin/kubectl
    register: kubectl_status

  - name: Setup kubectl utility
    shell: |
      curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      chmod +x kubectl
      mv ./kubectl /usr/local/bin
    when: kubectl_status.stat.exists == False

  - name: Update kubeconfig and set context to openidl {{ app_cluster_name }}
    shell: |
      export AWS_PROFILE=cicd-role; aws eks update-kubeconfig --region {{ aws_region }} --name {{ app_cluster_name }}

  - name: Checking helm exists
    stat:
      path: /usr/local/bin/helm
    register: helm_status

  - name: Download the helm bundle
    get_url: url=https://get.helm.sh/helm-v3.4.1-linux-amd64.tar.gz dest=/tmp/helm-bundle.zip
    register: helm_bundle_download
    when: helm_status.stat.exists == False

  - name: Unarchive the helm installer
    unarchive: src=/tmp/helm-bundle.zip dest=/tmp copy=no creates=/tmp/linux-amd64/helm
    register: helm_installer_unarchive
    when: helm_bundle_download.changed

  - name: Intall helm
    shell: |
      sudo mv /tmp/linux-amd64/helm /usr/local/bin/helm
      sudo chmod +x /usr/local/bin/helm
    when: helm_installer_unarchive.changed

  - name: Download git repository content
    git:
      repo: { { git-repository } }
      dest: /tmp/openidl
      force: yes
      single_branch: yes
      version: { { git-branch } }

  - name: Deploy openIDL app using helm
    shell: |
      helm upgrade --recreate-pods --install dev-carrier /tmp/openidl/openidl-k8s -f /tmp/openidl/openidl-k8s/global-values-{{ env }}-{{ node_type }}.yaml \
          -n openidl --set global.datacallapp.ingressenabled=true --set global.utilities.ingressenabled=true \
          --set global.carrierui.ingressenabled=true --set global.insurancedatamanager.ingressenabled=true \
          --set global.secrets.install=false

  - name: Dispose temporary git repository content
    file:
      path: /tmp/openidl/
      state: absent

