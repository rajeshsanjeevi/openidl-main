---
- name: Deploy OpenIDL secrets on {{ node_type }} node
  hosts: ansible_provisioners
  gather_facts: yes
  no_log: "{{ no_ansible_log | default(false) }}"
  tasks:
  - name: Install package dependencies - ubuntu
    package:
      name: "{{ item }}"
      state: present
    with_items:
      - curl
      - awscli
    when: ansible_distribution == "Ubuntu"

  - name: Install package dependencies - redhat
    become: true
    yum:
      name: curl
    when: ansible_distribution == "RedHat"

  - name: Install awscli - redhat
    become: true
    pip:
      name: "awscli"
      executable: "pip3"
    when: ansible_distribution == "RedHat"

  - name: Configure awscli credentials for IAM user
    shell: aws configure set {{ item.key }} {{ item.value }} --profile cicd-user
    no_log: True
    with_dict:
      aws_access_key_id: "{{ aws_access_key }}"
      aws_secret_access_key: "{{ aws_secret_key }}"
      region: "{{ aws_region }}"
      format: "table"
      external_id: "{{ aws_external_id }}"
    changed_when: false

  - name: Configure awscli credentials for IAM role
    shell: aws configure set {{ item.key }} {{ item.value }} --profile cicd-role
    no_log: True
    with_dict:
      external_id: "{{ aws_external_id }}"
      source_profile: "cicd-user"
      role_arn: "{{ aws_iam_role }}"
      region: "{{ aws_region }}"
    changed_when: false

  - name: Test AWS CLI is functioning
    shell: export AWS_PROFILE=cicd-role; aws sts get-caller-identity
    register: aws_caller_identity

  - name: Checking kubectl exists
    stat:
      path: /usr/local/bin/kubectl
    register: kubectl_status

  - name: Setup kubectl utility
    shell: |
      curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      chmod +x kubectl
      mv ./kubectl /usr/local/bin
    when: kubectl_status.stat.exists == False

  - name: Update kubeconfig and set context to openidl {{ app_cluster_name }}
    shell: |
      export AWS_PROFILE=cicd-role; aws eks update-kubeconfig --region {{ aws_region }} --name {{ app_cluster_name }}

  - name: Checking helm exists
    stat:
      path: /usr/local/bin/helm
    register: helm_status

  - name: Download the helm bundle
    get_url: url=https://get.helm.sh/helm-v3.4.1-linux-amd64.tar.gz dest=/tmp/helm-bundle.zip
    register: helm_bundle_download
    when: helm_status.stat.exists == False

  - name: Unarchive the helm installer
    unarchive: src=/tmp/helm-bundle.zip dest=/tmp copy=no creates=/tmp/linux-amd64/helm
    register: helm_installer_unarchive
    when: helm_bundle_download.changed

  - name: Intall helm
    shell: |
      sudo mv /tmp/linux-amd64/helm /usr/local/bin/helm
      sudo chmod +x /usr/local/bin/helm
      rm -rf /tmp/helm-bundle.zip
      rm -rf /tmp/linux-amd64/
    when: helm_installer_unarchive.changed

  - name: Download git repository content
      git:
        repo: "https://{{gitrepo_username|urlencode()}}:{{gitrepo_password|urlencode()}}@{{ gitrepo_name }}"
        dest: /tmp/openidl
        force: yes
        single_branch: yes
        version: "{{ gitrepo_branch }}"

  - name: Prepare a pod
    no_log: True
    shell: |
      kubectl run deploy-secrets -n openidl --image=amazonlinux:latest --command sleep infinity
      sleep 60
      kubectl exec deploy-secrets -n openidl -- sh -c "yum install tar -y > /dev/null 2&>1"
      kubectl cp /tmp/openidl/openidl-k8s/ openidl/deploy-secrets:/
      kubectl cp /tmp/openidl/openidl-test-network/vault/ openidl/deploy-secrets:/
      kubectl exec deploy-secrets -n openidl -- sh -c "chmod +x vault/*.sh"
      kubectl exec deploy-secrets -n openidl -- sh -c \
                "mkdir openidl-k8s/charts/openidl-secrets/config-{{ env }}-{{ org_name }}"
      kubectl exec deploy-secrets -n openidl -- sh -c "./vault/deploy-utilities.sh \
                -a {{ aws_access_key }} -s {{ aws_secret_key }} \
                -r {{ aws_region }} -o {{ aws_iam_role }}"
    register: pod_ready

  - name: Retrieve secrets from vault
    shell: |
      kubectl exec deploy-secrets -n openidl -- sh -c "./vault/pull-aws-vault-config.sh \
                -s {{ vault_secret_name }} -r {{ aws_region }} -a config-{{ org_name }} \
                -c openidl-k8s/charts/openidl-secrets/config-{{ env }}-{{ org_name }}"
    register: secrets_retrieved
    when: pod_ready.rc == 0

  - name: Deploy secrets
    shell: |
      kubectl exec deploy-secrets -n openidl -- sh -c "export AWS_PROFILE=git-role; aws eks update-kubeconfig \
                --region {{ aws_region }} --name {{ app_cluster_name }}"
      kubectl exec deploy-secrets -n openidl -- helm upgrade --install \
                {{ env }}-{{ org_name }}-secrets ./openidl-k8s \
                -f ./openidl-k8s/global-values-secrets.yaml -n openidl \
              --set global.configpath=config-{{ env }}-{{ org_name }}
    register: deploy_secrets
    when: secrets_retrieved.rc == 0

  - name: Dispose the pod
    shell: |
      kubectl delete pod deploy-secrets -n openidl
    when: pod_ready.rc == 0

  - name: Dispose temporary git repository content
    file:
      path: /tmp/openidl/
      state: absent
