name: Publish openidl mood-lisener-v1.0
on:
  push:
    branches:
      - 'develop'

    paths:
      - 'openidl-data-call-mood-listener/**'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: openidl-data-call-mood-listener
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NPM_TOKEN: $${{ secrets.PERSONAL_ACCESS_TOKEN }}

defaults:
  run:
    shell: bash
    working-directory: openidl-data-call-mood-listener

jobs:
  build-and-push-image-data-call-mood-listener:
    #if: github.event.pull_request.merged == true
    #if: github.event_name == 'push'
    name: Build and Push - openIDL data call mood listener to GitHub Packages
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Check out the Repository
        uses: actions/checkout@v2

      - name: Log into GitHub Docker Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=schedule,pattern={{date 'YYYYMMDD'}}
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Prepare .npmrc
        id: npmrc
        run: |
          sed -i 's|${GITHUB_TOKEN}|${{ secrets.PERSONAL_ACCESS_TOKEN }}|' ./.npmrc

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: openidl-data-call-mood-listener
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.REGISTRY }}/${{ github.repository }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ github.repository }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        #   ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}




