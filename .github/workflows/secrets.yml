#To enable this workflow, below secrets are required to setup in environment aais_dev
#1. eks_admin_access_key
#2. eks_admin_secret_key
#3. eks_region
#4. eks_cluster_name
#5. secretmanager_region
#6. secret_name

name: Deploy secrets v1.0
on:
  push:
    branches:
      - 'mood-listener'
  # paths:
  #    - ''

defaults:
  run:
    shell: bash
  # working-directory:

jobs:
  secrets-aais-dev:
  #  environment: aais-dev

    name: Deploy secrets for aais node in DEV
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f

    - name: Configure AWS CLI with credentials
      uses: aws-actions/configure-aws-credentials@230d25f14e841bc8e06b5f4ff89ccd6989fc1d71
      with:
        aws-access-key-id: ${{ secrets.eks_admin_access_key }}
        aws-secret-access-key: ${{ secrets.eks_admin_secret_key }}
        aws-region: ${{ secrets.eks_region }}
      # role-to-assume: ${{ secrets.eks_admin_role }}
      # role-external-id: ${{ secrets.eks_external_id }}
      # role-duration-seconds: 3600 # session valid for 30 minutes
      # role-session-name: GitHubActions-session

    - name: Setup kube-config for app cluster
      run: |
       aws eks update-kubeconfig --region ${{ secrets.eks_region }} --name ${{ secrets.eks_cluster_name }}

    - name: Prepare a pod in app cluster
      run: |
        kubectl run deploy-secrets -n openidl --image=amazonlinux:latest --command sleep infinity
        sleep 60
        kubectl exec deploy-secrets -n openidl -- yum install unzip wget tar gzip jq which -y
        kubectl exec deploy-secrets -n openidl -- wget https://get.helm.sh/helm-v3.7.0-rc.3-linux-amd64.tar.gz
        kubectl exec deploy-secrets -n openidl -- tar -zxvf helm-v3.7.0-rc.3-linux-amd64.tar.gz
        kubectl exec deploy-secrets -n openidl -- mv linux-amd64/helm /usr/local/bin/helm
        kubectl cp openidl-k8s/ openidl/deploy-secrets:/
        kubectl cp openidl-test-network/ openidl/deploy-secrets:/
        echo "completed file copy"

      # kubectl exec deploy-secrets -n openidl -- curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      # echo "completed downloading awscli"
      # kubectl exec deploy-secrets -n openidl -- unzip awscliv2.zip
      # echo "completed unzip awscli"
      # kubectl exec deploy-secrets -n openidl -- sh -c './aws/install'
      # kubectl exec deploy-secrets -n openidl -- sh -c 'aws configure set aws_access_key_id ${{ secrets.eks_admin_access_key }}'
      # kubectl exec deploy-secrets -n openidl -- sh -c 'aws configure set aws_secret_access_key ${{ secrets.eks_admin_secret_key }}'
      # kubectl exec deploy-secrets -n openidl -- sh -c 'aws configure region ${{ secrets.eks_region }}'

    - name: Processing credentials
      run: |
        aws secretsmanager get-secret-value --secret-id ${{ secrets.secret_name }} --query SecretString --output text | jq -r 'to_entries|map("\(.key)=\(.value|tostring)")|.[]' > /tmp/secrets.env
        eval $(cat /tmp/secrets.env | sed 's/^/export /')
        rm -f /tmp/secrets.env
        echo $url, $username, $password, $orgName, $vaultPath

    - name: Pull vault config
      run: |
        echo ${{ env.url }}
        echo ${username}
        echo ${{ env.GITHUB_JOB }}
        echo ${{ env.ImageOS }}
      #  kubectl exec deploy-secrets -n openidl -- echo "${{ env.url }}"
      #  kubectl exec deploy-secrets -n openidl -- sh -c 'chmod +x openidl-test-network/vault/pull-vault-config.sh'
      #  kubectl exec deploy-secrets -n openidl -- sh -c 'ls -l openidl-test-network/vault/pull-vault-config.sh'
      #  kubectl exec deploy-secrets -n openidl -- sh -c './openidl-test-network/vault/pull-vault-config.sh -V ${{ env.url }} -U ${{ env.username }} -P ${{ env.password }} -a config-aais -o ${{ env.orgName }} -c openidl-k8s/charts/openidl-secrets/config-aais'

    - name: Deploy secrets
      run: |
        kubectl exec deploy-secrets -n openidl -- cd openidl-k8s
        kubectl exec deploy-secrets -n openidl -- helm version
  #     helm upgrade secrets

    - name: Dispose the pod
      if: ${{ always() }}
      run: |
        kubectl delete pod deploy-secrets -n openidl

