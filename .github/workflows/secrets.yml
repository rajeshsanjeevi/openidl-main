#To enable this workflow, below secrets are required to setup in environment aais_dev
#1. eks_admin_access_key
#2. eks_admin_secret_key
#3. eks_region
#4. eks_cluster_name
#5. AWS secretmanager region

name: Deploy secrets v1.0
on:
  push:
    branches:
      - 'mood-listener'
  # paths:
  #    - ''

defaults:
  run:
    shell: bash
  # working-directory:

jobs:
  secrets-aais-dev:
  #  environment: aais-dev

    name: Deploy secrets for aais node in DEV
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f

    - name: Configure AWS CLI with credentials
      uses: aws-actions/configure-aws-credentials@230d25f14e841bc8e06b5f4ff89ccd6989fc1d71
      with:
        aws-access-key-id: ${{ secrets.eks_admin_access_key }}
        aws-secret-access-key: ${{ secrets.eks_admin_secret_key }}
        aws-region: ${{ secrets.eks_region }}
      # role-to-assume: ${{ secrets.eks_admin_role }}
      # role-external-id: ${{ secrets.eks_external_id }}
      # role-duration-seconds: 3600 # session valid for 30 minutes
      # role-session-name: GitHubActions-session

    - name: Retrive vault credentials from AWS secrets maanger
      #uses: abhilash1in/aws-secrets-manager-action@6aa1cbfc596cb9cbdcaa5fffb8a2788fe9c83e1e
      uses: abhilash1in/aws-secrets-manager-action@v1.1.0
      with:
        aws-access-key-id: $${{ secrets.eks_admin_access_key }}
        aws-secret-access-key: ${{ secrets.eks_admin_secret_key }}
        aws-region: ${{ secrets.secretmanager_region }}
        secrets: |
          my_secret_1
          my_secret_2
        parse-json: true

    - name: Check if env variable is set after fetching secrets
      run: |
       if [ -z ${MY_SECRET_1+x} ]; then echo "MY_SECRET_1 is unset"; else echo "MY_SECRET_1 is set to '$MY_SECRET_1'"; fi
       if [ -z ${MY_SECRET_2+x} ]; then echo "MY_SECRET_2 is unset"; else echo "MY_SECRET_2 is set to '$MY_SECRET_2'"; fi
       echo $MY_SECRET_1, $MY_SECRET_2
       echo $MY_SECRET_1_USER
       printenv

      #  - name: Setup kube-config
  #    run: |
  #      aws eks update-kubeconfig --region ${{ secrets.eks_region }} --name ${{ secrets.eks_cluster_name }}

  #  - name: Connect to app cluster and setup a pod
  #    run: |
  #      kubectl run deploy-secrets -n openidl --image=amazonlinux:latest --command sleep infinity
  #      sleep 60
  #      kubectl exec awslinux -- yum install unzip wget tar gzip jq -y
      # kubectl exec deploy-secrets -n openidl -- curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      # kubectl exec deploy-secrets -n openidl -- unzip awscliv2.zip && ./aws/install
  #      kubectl exec deploy-secrets -n openidl -- wget https://get.helm.sh/helm-v3.7.0-rc.3-linux-amd64.tar.gz
  #      kubectl exec deploy-secrets -n openidl -- tar -zxvf helm-v3.7.0-rc.3-linux-amd64.tar.gz
  #      kubectl exec deploy-secrets -n openidl -- mv linux-amd64/helm /usr/local/bin/helm
      # kubectl exec deploy-secrets -n openidl -- aws configure set aws_access_key_id ${{ secrets.eks_admin_access_key }}
      # kubectl exec deploy-secrets -n openidl -- aws configure set aws_secret_access_key ${{ secrets.eks_admin_secret_key }}
      # kubectl exec deploy-secrets -n openidl -- aws configure region ${{ secrets.eks_region }}

  #   -name: Retrieve secrets
  #    run: |
  #      kubectl cp openidl-k8s/ openidl/deploy-secrets:/
  #      kubectl cp openidl-test-network/ openidl/deploy-secrets:/
  #      kubectl exec deploy-secrets -n openidl -- aws secretsmanager get-secret-value --secret-id aais-hv-credential --region ${{ secrets.secretmanager_region }}
  #      kubectl exec deploy-secrets -n openidl -- aws secretsmanager get-secret-value --secret-id aais-hv-credential --region ${{ secrets.secretmanager_region }} --query SecretString --output text | jq .url
  #      kubectl exec deploy-secrets -n openidl -- aws secretsmanager get-secret-value --secret-id aais-hv-credential --region ${{ secrets.secretmanager_region }} --query SecretString --output text | jq .username
  #      kubectl exec deploy-secrets -n openidl -- aws secretsmanager get-secret-value --secret-id aais-hv-credential --region ${{ secrets.secretmanager_region }} --query SecretString --output text | jq .password
  #      kubectl exec deploy-secrets -n openidl -- aws secretsmanager get-secret-value --secret-id aais-hv-credential --region ${{ secrets.secretmanager_region }} --query SecretString --output text | jq .vaultPath
  #      kubectl exec deploy-secrets -n openidl -- aws secretsmanager get-secret-value --secret-id aais-hv-credential --region ${{ secrets.secretmanager_region }} --query SecretString --output text | jq .orgName
  #      kubectl exec deploy-secrets -n openidl -- aws secretsmanager get-secret-value --secret-id aais-hv-credential --region ${{ secrets.secretmanager_region }} --query SecretString --output text | jq .apiVersion

# connect to vault and retrieve credentials
#Retrieve secret and pass to the script.

  #  - name: Deploy secrets
  #    run: |
  #      cd openidl-k8s
  #      helm upgrade secrets

  #  - name: Dispose the pod
  #    run: |
  #      kubectl delete pod deploy-secrets -n openidl
